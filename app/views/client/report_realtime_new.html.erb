		<% campaign = @campaign %>
		<% stats = campaign.call_stats(@timeframe) %>
		<%# attempts = stats[:attempts] %>
		<%	stats[:answer_pct] = 0.000001 if stats[:answer_pct]==0 %>
		
		<div class="box" style="width:750px; ">
			<%= render :partial => 'boxtop', :locals=>{:title=>"#{campaign.name}: michael's algorithm<sup>&copy;</sup>"} %>
			<div class="box-content">
				
				avg ring_time = <%=  stats[:avg_ring_time] %>, 
				avg ring_time_deviation =  <%=   sprintf( "%0.02f", stats[:avg_ring_time_deviation] ) %>, 
				avg ring_time_adjusted =  <%=   sprintf( "%0.02f",  stats[:avg_ring_time_adjusted] ) %><br/>
			    Avg call length: <b><%= (stats[:avg_duration]).to_i %>s</b><br/>
			<!--
				Longest long: <b><%= stats[:biggest_long] %>s</b>
				-->
				short_long = 15<br/>
				Average long: <b><%= stats[:avg_long] %>s</b>, 
				Average long deviation: <%= stats[:long_deviation] %>, 
				call_length_long = <%= stats[:call_length_long] %>s<br/>
				Average short: <b><%= stats[:avg_short] %>s</b>, 
				Average short deviation: <%= stats[:short_deviation] %>, 
				call_length_short = <%= stats[:call_length_short] %>s<br/>
				Short calls: <b><%= stats[:total_short] %></b>,				
				Long calls: <b><%= stats[:total_long] %></b>, 
				ratio_short = <%= sprintf( "%0.02f", stats[:ratio_short] )%><br/>
				short_callers =   <%= sprintf( "%0.02f", stats[:short_callers] )%>
				
				
				<p>

bimodal pacing algorithm: <br/>
when   <%= sprintf( "%0.02f", stats[:short_new_call_caller_threshold]  )%> callers are on calls of length less than <%= stats[:short_time] %>s, dial  <%=   sprintf( "%0.02f", stats[:dials_needed] )%> lines at  <%=  sprintf( "%0.02f", stats[:short_new_call_time_threshold])%> seconds after the last call began.
<br/> 
if a call passes length 15s, dial <%=  stats[:dials_needed] %> lines at  <%=  sprintf( "%0.02f",stats[:long_new_call_time_threshold]) %>sinto the call.				
</p>
			</div>
		</div>
		
